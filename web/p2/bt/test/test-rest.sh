#!/usr/bin/env bash


# TODO: ALLE anderen moeglichen REST-Anfragen hinzufuegen!


# Test, ob der Server ueberhaupt online ist !
curl 127.0.0.1:8080 &> /dev/null
if test $? -ne 0; then
	echo "Server not up and running on 127.0.0.1:8080 !"
	echo "Run> cd $HOME/GitHub/web-praktikum/web/p1/"
	echo "Run> python3 server.py"
	exit
fi


RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NOCOL='\033[0m'


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\n\nUEBERPRUEFT WIRD 127.0.0.1:8080/projekt\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/projekt:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/projekt)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/projekt

printf "\nGET http://127.0.0.1:8080/projekt/512\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/projekt/512)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/projekt/512

printf "\n________________________________________________________________________________\n\n"
################################################################################################################################################################

PROJEKT_POST() {
	cat <<EOF
{
	"unique_id" : 12345,
	"komponenten" : []
}
EOF
}

printf "\nPOST http://127.0.0.1/projekt + Daten\n"
echo "Uebermittelte Daten: $(PROJEKT_POST)"
PROJEKT_ID=$(curl -s --header "Content-Type: application/json" --request POST --data "$(PROJEKT_POST)" 127.0.0.1:8080/projekt | jq ".unique_id")
echo "Neue Projekt-Id: ${PROJEKT_ID}"

#
# Hier ggf. noch ein GET mit der Projekt-Id
#

printf "\n________________________________________________________________________________\n\n"
################################################################################################################################################################

PROJEKT_PUT() {
    cat <<EOF
{
    "unique_id" : $PROJEKT_ID,
    "komponenten" : [1, 2, 3, 4, 5]
}
EOF
}

printf "\nPUT http://127.0.0.1/projekt/$PROJEKT_ID + Daten\n"
echo "Uebermittelte Daten: $(PROJEKT_PUT)"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" --header "Content-Type: application/json" --request PUT --data "$(PROJEKT_PUT)" 127.0.0.1:8080/projekt/$PROJEKT_ID)

#
# Hier ggf. noch ein GET mit der Projekt-Id
#

printf "\n________________________________________________________________________________\n\n"
################################################################################################################################################################

printf "\nDELETE http://127.0.0.1/projekt/$PROJEKT_ID\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" --header "Content-Type: application/json" --request DELETE 127.0.0.1:8080/projekt/$PROJEKT_ID)

#
# Hier ggf. noch ein GET mit der allen Projekten
#


printf "\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/projektkomponenten\n"
printf "HTTP-Methoden: GET:\n"
printf "==================\n"

printf "\nGET http://127.0.0.1:8080/projektkomponenten/512:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/projektkomponenten/512)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/projektkomponenten/512


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/komponente\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/komponente:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/komponente)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/komponente

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/qsmitarbeiter\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/qsmitarbeiter:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/qsmitarbeiter)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/qsmitarbeiter

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/swentwickler\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/swentwickler:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/swentwickler)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/swentwickler

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/katfehler\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/katfehler:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/katfehler)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/katfehler

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/katursache\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/katursache:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/katursache)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/katursache

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/fehler\n"
printf "HTTP-Methoden: GET | POST | PUT | DELETE:\n"
printf "========================================\n"

printf "\nGET http://127.0.0.1:8080/fehler:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/fehler)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/fehler

#
# ...
#


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/prolist\n"
printf "HTTP-Methoden: GET:\n"
printf "==================\n"

printf "\nGET http://127.0.0.1:8080/prolist:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/prolist)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/prolist


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/katlist\n"
printf "HTTP-Methoden: GET:\n"
printf "==================\n"

printf "\nGET http://127.0.0.1:8080/katlist:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/katlist)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/katlist


printf "\n\n${RED}================================================================================\n\n"

read -n 1 -p "Weiter (y|n): " ANSWER
case $ANSWER in
	N|n)	printf "\nBeende...\n${NOCOL}"
            exit;;
	*)		;;
esac

printf "\n\n================================================================================${NOCOL}\n\n"


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################


printf "\nUEBERPRUEFT WIRD 127.0.0.1:8080/templates\n"
printf "HTTP-Methoden: GET:\n"
printf "==================\n"

printf "\nGET http://127.0.0.1:8080/templates:\n"
printf "HTTP-Rueckgabe-Code: "
echo $(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/templates)
#printf "Zurueckgegebene JSON-Daten: "
#curl -s http://127.0.0.1:8080/templates
